#!/usr/bin/env ruby
# An example of how to use the bloodymines game-engine within a curses program.

require "optparse"
require File.dirname(__FILE__) + "/../lib/bloodymines"
require File.dirname(__FILE__) + "/../lib/bloodymines/tui"

class Bloodymines
  include TUI
end

# parse command line options
options = {}
optparse = OptionParser.new do |opts|
  opts.on('-h','--help', 'display this screen') { puts opts; exit }
  opts.on('-d', '--difficulty DIFFICULTY', [:beginner, :intermediate, :expert],
          "beginner, intermediate or expert") do |d|
    options[:difficulty] = d
          end
end

begin
  optparse.parse!
rescue OptionParser::MissingArgument, OptionParser::InvalidArgument
  puts optparse
  exit
end

# start game as curses app
game = Bloodymines.new(:difficulty => options[:difficulty])

Curses.program do |scr|
  while true
    game.turn
    if game.ended?
      game.draw_field
      setpos(0, 1)
      addstr("Game Over. Hit any key to quit.")
      getch
      break
    end
  end

  close_screen
  if game.result[:finished]
    puts "You completed the game on #{game.difficulty.to_s.upcase}!"
  else
    puts "You did not manage to finish the game."
  end
  puts "Your final score was: #{game.result[:score]}"
end
